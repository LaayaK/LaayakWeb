{"version":3,"sources":["StuComponents/StuLogin.jsx","firebase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","ShowPassword.jsx"],"names":["StuLogin","db","firebase","firestore","isMount","state","email","password","access","loading","handleSubmit","e","preventDefault","classList","target","add","auth","signInWithEmailAndPassword","then","user","displayName","remove","M","toast","html","classes","window","location","pathname","catch","err","message","handleChange","name","value","setState","this","checkAuth","onAuthStateChanged","type","setTimeout","to","className","onSubmit","style","width","htmlFor","placeholder","id","required","onChange","Component","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ShowPassword","onClick","document","getElementById","getAttribute","setAttribute","toggle"],"mappings":"uOAOMA,E,4MACJC,GAAKC,IAASC,Y,EACdC,SAAU,E,EACVC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,QAAQ,EACRC,SAAS,G,EA2CXC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAYF,EAAEG,OAAOD,UAC3BA,EAAUE,IAAI,WACdb,IACGc,OACAC,2BAA2B,EAAKZ,MAAMC,MAAO,EAAKD,MAAME,UACxDW,MAAK,SAACC,GAEuB,YAA1BA,EAAKA,KAAKC,aACgB,OAA1BD,EAAKA,KAAKC,aAEVP,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CACNC,KAAM,yBACNC,QAAS,wBAEXC,OAAOC,SAASC,SAAW,aAE3Bf,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CACNC,KAAM,yBACNC,QAAS,0BAIdI,OAAM,SAACC,GAGF,kEADFA,EAAIC,SAGF,8FADFD,EAAIC,SAGJlB,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CACNC,KAAM,yBACNC,QAAS,wBAGXZ,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CAAEC,KAAMM,EAAIC,QAASN,QAAS,2B,EAK9CO,aAAe,SAACrB,GACd,IAAMsB,EAAOtB,EAAEG,OAAOmB,KACpBC,EAAQvB,EAAEG,OAAOoB,MACf,EAAK9B,SACP,EAAK+B,SAAL,eACGF,EAAOC,K,kEAzFZE,KAAKhC,SAAU,EACfgC,KAAKC,c,kDAILD,KAAKhC,SAAU,I,kCAGJ,IAAD,OACVF,IAASc,OAAOsB,oBAAmB,SAACnB,GAC9BA,IACE,EAAKf,SACP,EAAK+B,SAAS,CAAE7B,MAAOa,EAAKb,QAEL,YAArBa,EAAKC,aACH,EAAKhB,SACP,EAAK+B,SAAS,CACZ3B,QAAQ,EACR+B,KAAM,YAIa,OAArBpB,EAAKC,aACH,EAAKhB,SACP,EAAK+B,SAAS,CACZ3B,QAAQ,EACR+B,KAAM,WAMhBC,YAAW,WACL,EAAKpC,SACP,EAAK+B,SAAS,CAAE1B,SAAS,MAE1B,O,+BA4DH,OAAG2B,KAAK/B,MAAMC,OAAS8B,KAAK/B,MAAMG,OAEzB,kBAAC,IAAD,CAAUiC,GAAG,aAKpB,oCACA,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,qCACA,0BAAMC,SAAUP,KAAK1B,aAAckC,MAAO,CAAEC,MAAO,SACjD,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,aACb,2BAAOI,QAAQ,SAAf,SACA,2BACEC,YAAY,QACZC,GAAG,QACHT,KAAK,QACLL,MAAOE,KAAK/B,MAAMC,MAClB2B,KAAK,QACLgB,UAAQ,EACRC,SAAUd,KAAKJ,gBAGnB,yBAAKU,UAAU,aACb,2BAAOI,QAAQ,YAAf,aACA,2BACEC,YAAY,WACZC,GAAG,WACHT,KAAK,WACLN,KAAK,WACLC,MAAOE,KAAK/B,MAAME,SAClB2C,SAAUd,KAAKJ,aACfiB,UAAQ,IAEV,kBAAC,IAAD,OAEF,yBAAKP,UAAU,WAAf,aACY,kBAAC,IAAD,CAAMD,GAAG,mBAAT,YAEZ,gCACE,4BAAQF,KAAK,SAASG,UAAU,aAAhC,qB,GAtJKS,aAoKRnD,a,gCC3Kf,8BAeAE,IAASkD,cAVc,CAErBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,gBACnBC,MAAO,+CAIMxD,MAAf,G,gCChBe,SAASyD,EAAgBC,EAAKC,EAAK3B,GAYhD,OAXI2B,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9B3B,MAAOA,EACP8B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAO3B,EAGN0B,EAZT,mC,gCCAA,oBAceO,IAZM,WAOjB,OACI,uBAAGzB,UAAU,YAAY0B,QAPV,SAACzD,GAChB,IAAMJ,EAAW8D,SAASC,eAAe,YACnC/B,EAAyC,aAAlChC,EAASgE,aAAa,QAAyB,OAAS,WACrEhE,EAASiE,aAAa,OAAQjC,GAC9B5B,EAAEG,OAAOD,UAAU4D,OAAO","file":"static/js/19.d12bb361.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport firebase from \"../firebase\";\r\nimport ShowPassword from \"../ShowPassword\";\r\n\r\nclass StuLogin extends Component {\r\n  db = firebase.firestore();\r\n  isMount = false;\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    access: false,\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.isMount = true;\r\n    this.checkAuth();\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.isMount = false;\r\n  }\r\n\r\n  checkAuth() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        if (this.isMount) {\r\n          this.setState({ email: user.email })\r\n        }\r\n        if (user.displayName === \"student\") {\r\n          if (this.isMount) {\r\n            this.setState({\r\n              access: true,\r\n              type: \"Student\"\r\n            })\r\n          }\r\n        }\r\n        if (user.displayName === \"cr\") {\r\n          if (this.isMount) {\r\n            this.setState({\r\n              access: true,\r\n              type: \"CR\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      if (this.isMount) {\r\n        this.setState({ loading: false })\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const classList = e.target.classList;\r\n    classList.add(\"loading\");\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((user) => {\r\n        if (\r\n          user.user.displayName === \"student\" ||\r\n          user.user.displayName === \"cr\"\r\n        ) {\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Logged In Successfully\",\r\n            classes: \"toast success-toast\",\r\n          });\r\n          window.location.pathname = \"/student\";\r\n        } else {\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Invalid Email/Password\",\r\n            classes: \"toast error-toast\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.message ===\r\n            \"The password is invalid or the user does not have a password.\" ||\r\n          err.message ===\r\n            \"There is no user record corresponding to this identifier. The user may have been deleted.\"\r\n        ) {\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Invalid Email/Password\",\r\n            classes: \"toast error-toast\",\r\n          });\r\n        } else {\r\n          classList.remove(\"loading\");\r\n          M.toast({ html: err.message, classes: \"toast error-toast\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name,\r\n      value = e.target.value;\r\n    if (this.isMount) {\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    if(this.state.email && this.state.access)\r\n    {\r\n      return <Redirect to=\"/student\" />\r\n    }\r\nelse\r\n{\r\n    return (\r\n      <>\r\n      <div className=\"main-container\">\r\n        <div className=\"container-login mx-auto\">\r\n          <div className=\"con-login\">\r\n            <h1>Login</h1>\r\n            <form onSubmit={this.handleSubmit} style={{ width: \"100%\" }}>\r\n              <div className=\"con-inputs mt-4\">\r\n                <div className=\"con-input\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    placeholder=\"Email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={this.state.email}\r\n                    name=\"email\"\r\n                    required\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"con-input\">\r\n                  <label htmlFor=\"password\">Password:</label>\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                  <ShowPassword />\r\n                </div>\r\n                <div className=\"con-new\">\r\n                  New here? <Link to=\"/student/signup\">Sign Up</Link>\r\n                </div>\r\n                <footer>\r\n                  <button type=\"submit\" className=\"btn-login\">\r\n                    Log In\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div></>\r\n    );\r\n}\r\n  }\r\n}\r\n\r\nexport default StuLogin;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n//   paste your keys here!!!\r\n  apiKey: \"AIzaSyBtqTsT1XUqRQUREtKJ0QSnmHd5YvExHw8\",\r\n  authDomain: \"layaak-web.firebaseapp.com\",\r\n  projectId: \"layaak-web\",\r\n  storageBucket: \"layaak-web.appspot.com\",\r\n  messagingSenderId: \"1093914758055\",\r\n  appId: \"1:1093914758055:web:b614caead750078d920482\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\r\n\r\nconst ShowPassword = () => {\r\n    const showToggle = (e) => {\r\n        const password = document.getElementById(\"password\");\r\n        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';\r\n        password.setAttribute('type', type);\r\n        e.target.classList.toggle('fa-eye-slash');\r\n    }\r\n    return (\r\n        <i className=\"fa fa-eye\" onClick={showToggle} />\r\n    );\r\n}\r\n\r\nexport default ShowPassword;\r\n"],"sourceRoot":""}