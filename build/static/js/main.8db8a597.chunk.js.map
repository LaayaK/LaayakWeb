{"version":3,"sources":["DarkToggle/DarkToggle.jsx","Loader/Loader.jsx","NavBar/logo.png","NavBar/script.js","NavBar/mainNavBar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DarkToggle","state","mode","document","getElementsByTagName","classList","className","id","type","onChange","localStorage","setItem","replace","getItem","setState","checked","this","Component","Loader","module","exports","window","onload","hamburger","querySelector","navLink","querySelectorAll","navLinks","addEventListener","toggle","forEach","link","MainNavBar","src","logo","alt","to","Home","lazy","StuLanding","StuSignup","CrLanding","About","NewCr","CrDetails","TeacherDetails","Landing","NewTeacher","ClassDetails","classDetails","TeacherLogin","CrLogin","NotFound","StuLogin","Profile","App","add","fallback","path","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8db8a597.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./DarkToggle.css\"\r\n\r\nclass DarkToggle extends Component {\r\n    state = {\r\n        mode: document.getElementsByTagName(\"Body\")[0].classList[0]\r\n    }\r\n    render() {\r\n        const toggle = () => {\r\n            this.state.mode === \"dark\" ? localStorage.setItem(\"mode\", \"light\") : localStorage.setItem(\"mode\", \"dark\");\r\n            document.getElementsByTagName(\"Body\")[0].classList.replace(this.state.mode, localStorage.getItem(\"mode\"));\r\n            this.setState({\r\n                mode: localStorage.getItem(\"mode\")\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"input-dark\">\r\n                <label id=\"switch\" className=\"switch\">\r\n                    <input \r\n                    type=\"checkbox\" \r\n                    className=\"custom-control-input\"\r\n                    onChange={toggle}\r\n                    checked={this.state.mode === \"dark\"}\r\n                    id=\"dark\" />\r\n                    <span className=\"slider round\"></span>\r\n                </label>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DarkToggle;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader mx-auto\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f07cbe52.png\";","window.onload = () => {\r\n  const hamburger = document.querySelector(\".hamburger\"),\r\n    navLink = document.querySelectorAll(\".nav-link\"),\r\n    navLinks = document.querySelector(\".nav-links\");\r\n\r\n  hamburger.addEventListener(\"click\", () => {\r\n    navLinks.classList.toggle(\"open\");\r\n  });\r\n\r\n  navLink.forEach((link) =>\r\n    link.addEventListener(\"click\", () => {\r\n      navLinks.classList.toggle(\"open\");\r\n    })\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./main.css\";\r\nimport \"./script\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./logo.png\";\r\nimport DarkToggle from \"../DarkToggle/DarkToggle\";\r\nclass MainNavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"fixed-top\">\r\n        <div className=\"hamburger\">\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n        </div>\r\n\r\n        <div className=\"brand\">\r\n          <img src={logo} alt=\"LAAYAK\" className=\"logo\" />\r\n          <li>LaayaK</li>\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <li>home</li>\r\n          </Link>\r\n          <Link to=\"/student\" className=\"nav-link\">\r\n            <li>student</li>\r\n          </Link>\r\n          <Link to=\"/cr\" className=\"nav-link\">\r\n            <li>class representative</li>\r\n          </Link>\r\n          <Link to=\"/teacher\" className=\"nav-link\">\r\n            <li>teacher</li>\r\n          </Link>\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <li>about</li>\r\n          </Link>\r\n          <DarkToggle/>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainNavBar;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./assets/css/home.css\";\r\nimport \"./assets/css/about.css\";\r\nimport \"./assets/css/Login.css\";\r\nimport \"./assets/css/mainPage.css\";\r\nimport \"./assets/css/loadingButton.css\";\r\nimport \"./assets/css/fileInput.css\";\r\nimport MainNavBar from \"./NavBar/mainNavBar\";\r\nimport Loader from \"./Loader/Loader\";\r\n\r\nconst Home = lazy(() => import(\"./Home/home\"));\r\nconst StuLanding = lazy(() => import(\"./StuComponents/stuLanding\"));\r\nconst StuSignup = lazy(() => import(\"./StuComponents/StuSignup\"));\r\nconst CrLanding = lazy(() => import(\"./CrComponents/crLanding\"));\r\nconst About = lazy(() => import(\"./about\"));\r\nconst NewCr = lazy(() => import(\"./CrComponents/newCr\"));\r\nconst CrDetails = lazy(() => import(\"./CrComponents/afterSignup\"));\r\nconst TeacherDetails = lazy(() => import(\"./Teacher/AfterSignup\"));\r\nconst Landing = lazy(() => import(\"./Teacher/Landing\"));\r\nconst NewTeacher = lazy(() => import(\"./Teacher/NewTeacher\"));\r\nconst ClassDetails = lazy(() => import(\"./Teacher/ClassDetails\"));\r\nconst classDetails = lazy(() => import(\"./CrComponents/ClassDetails\"));\r\nconst TeacherLogin = lazy(() => import(\"./Teacher/TeacherLogin\"));\r\nconst CrLogin = lazy(() => import(\"./CrComponents/crLogin\"));\r\nconst NotFound = lazy(() => import(\"./NotFound/NotFound\"));\r\nconst StuLogin = lazy(() => import(\"./StuComponents/StuLogin\"));\r\nconst Profile = lazy(() => import(\"./StuComponents/profile/Profile\"));\r\n\r\nfunction App() {\r\n  document\r\n    .getElementsByTagName(\"body\")[0]\r\n    .classList.add(localStorage.getItem(\"mode\"));\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <MainNavBar />\r\n        <Suspense fallback={<Loader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/student\" exact component={StuLanding} />\r\n            <Route path=\"/student/login\" exact component={StuLogin} />\r\n            <Route path=\"/student/signup\" exact component={StuSignup} />\r\n            <Route path=\"/student/profile\" exact component={Profile} />\r\n            <Route path=\"/newcr\" exact component={NewCr} />\r\n            <Route path=\"/newcr/details\" exact component={CrDetails} />\r\n            <Route path=\"/cr\" exact component={CrLanding} />\r\n            <Route path=\"/cr/login\" exact component={CrLogin} />\r\n            <Route path=\"/cr/class\" exact component={classDetails} />\r\n            <Route path=\"/teacher\" exact component={Landing} />\r\n            <Route path=\"/teacher/login\" exact component={TeacherLogin} />\r\n            <Route path=\"/teacher/class\" exact component={ClassDetails} />\r\n            <Route path=\"/newteacher\" exact component={NewTeacher} />\r\n            <Route\r\n              path=\"/newteacher/details\"\r\n              exact\r\n              component={TeacherDetails}\r\n            />\r\n            <Route path=\"/about\" exact component={About} />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}